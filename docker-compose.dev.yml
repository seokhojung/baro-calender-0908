
services:
  postgres:
    image: postgres:15-alpine
    container_name: baro_calendar_postgres_dev
    environment:
      POSTGRES_DB: baro_calendar_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./src/database/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d baro_calendar_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - baro_dev_network

  redis:
    image: redis:7-alpine
    container_name: baro_calendar_redis_dev
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - baro_dev_network

  # 개발용 애플리케이션
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: baro_calendar_app_dev
    ports:
      - "8000:8000"  # 백엔드는 8000번 포트
      - "9229:9229"  # Node.js 디버깅 포트
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_USER: postgres
      DB_NAME: baro_calendar_dev
      DB_PASSWORD: postgres123
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-at-least-32-characters-long
      PORT: 8000
      HOST: 0.0.0.0
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: info
      DEBUG: "*"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
    networks:
      - baro_dev_network
    # 개발 환경에서는 리소스 제한을 완화
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  baro_dev_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
